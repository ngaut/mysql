select user(), current_user();
user()	current_user()
root@localhost	root@localhost
update mysql.db set User = 'root' where User = '';
create table mysql.user_bak like mysql.user;
insert into mysql.user_bak select * from mysql.user where length(User) = 0;
delete from mysql.user where length(User) = 0;
flush privileges;
create table t1 (i int);
create table t2 (i int);
insert into t1 values (1);
insert into t2 values (1);
create user rolefoo@localhost identified by 'bar';
create user rolefoo2@localhost identified by 'bar';
create mapped user mapfoo identified by 'bar' role rolefoo;
create mapped user mapfoo2 identified by 'bar' role rolefoo2;
grant select on test.t1 to rolefoo@localhost;
grant select on test.t2 to rolefoo2@localhost;
select user(), current_user(), 'before change to rolefoo';
user()	current_user()	before change to rolefoo
root@localhost	root@localhost	before change to rolefoo
change user to rolefoo
select user(), current_user(), 'after change to rolefoo';
user()	current_user()	after change to rolefoo
rolefoo@localhost	rolefoo@localhost	after change to rolefoo
show grants;
Grants for rolefoo@localhost
GRANT USAGE ON *.* TO 'rolefoo'@'localhost' IDENTIFIED BY PASSWORD '*E8D46CE25265E545D225A8A6F1BAF642FEBEE5CB'
GRANT SELECT ON `test`.`t1` TO 'rolefoo'@'localhost'
select count(*) from t1;
count(*)
1
select count(*) from t2;
ERROR 42000: SELECT command denied to user 'rolefoo'@'localhost' for table 't2'
select user(), current_user(), 'before change to mapfoo';
user()	current_user()	before change to mapfoo
root@localhost	root@localhost	before change to mapfoo
change user to rolefoo
select user(), current_user(), 'after change to mapfoo';
user()	current_user()	after change to mapfoo
mapfoo@localhost	rolefoo@localhost	after change to mapfoo
show grants;
Grants for rolefoo@localhost
GRANT USAGE ON *.* TO 'rolefoo'@'localhost' IDENTIFIED BY PASSWORD '*E8D46CE25265E545D225A8A6F1BAF642FEBEE5CB'
GRANT SELECT ON `test`.`t1` TO 'rolefoo'@'localhost'
select count(*) from t1;
count(*)
1
select count(*) from t2;
ERROR 42000: SELECT command denied to user 'rolefoo'@'localhost' for table 't2'
select user(), current_user(), 'before change to rolefoo2';
user()	current_user()	before change to rolefoo2
mapfoo@localhost	rolefoo@localhost	before change to rolefoo2
select count(*) from t1;
count(*)
1
select count(*) from t2;
ERROR 42000: SELECT command denied to user 'rolefoo'@'localhost' for table 't2'
change user to rolefoo2
select user(), current_user(), 'after change to rolefoo2';
user()	current_user()	after change to rolefoo2
rolefoo2@localhost	rolefoo2@localhost	after change to rolefoo2
show grants;
Grants for rolefoo2@localhost
GRANT USAGE ON *.* TO 'rolefoo2'@'localhost' IDENTIFIED BY PASSWORD '*E8D46CE25265E545D225A8A6F1BAF642FEBEE5CB'
GRANT SELECT ON `test`.`t2` TO 'rolefoo2'@'localhost'
select count(*) from t2;
count(*)
1
select count(*) from t1;
ERROR 42000: SELECT command denied to user 'rolefoo2'@'localhost' for table 't1'
select user(), current_user(), 'before change to mapfoo2';
user()	current_user()	before change to mapfoo2
mapfoo@localhost	rolefoo@localhost	before change to mapfoo2
select count(*) from t1;
count(*)
1
select count(*) from t2;
ERROR 42000: SELECT command denied to user 'rolefoo'@'localhost' for table 't2'
change user to mapfoo2
select user(), current_user(), 'after change to mapfoo2';
user()	current_user()	after change to mapfoo2
mapfoo2@localhost	rolefoo2@localhost	after change to mapfoo2
show grants;
Grants for rolefoo2@localhost
GRANT USAGE ON *.* TO 'rolefoo2'@'localhost' IDENTIFIED BY PASSWORD '*E8D46CE25265E545D225A8A6F1BAF642FEBEE5CB'
GRANT SELECT ON `test`.`t2` TO 'rolefoo2'@'localhost'
select count(*) from t2;
count(*)
1
select count(*) from t1;
ERROR 42000: SELECT command denied to user 'rolefoo2'@'localhost' for table 't1'
select user(), current_user(), 'before set password';
user()	current_user()	before set password
mapfoo@localhost	rolefoo@localhost	before set password
set password = password('foobar');
ERROR 42000: This version of MySQL doesn't yet support 'CHANGE PASSWORD for mapped users'
drop user rolefoo@localhost;
drop user rolefoo2@localhost;
drop mapped user mapfoo;
drop mapped user mapfoo2;
select User, Role from mysql.mapped_user;
User	Role
drop table t1;
drop table t2;
update mysql.db set User='' where User='root';
insert into mysql.user select * from mysql.user_bak;
drop table mysql.user_bak;
flush privileges;
